<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace和定义的Mapper接口对应，并实现其中的方法 -->
<mapper namespace="com.ngnono.gechu.core.repository.persistence.UserMapper">

    <sql id="crtAllColumns">
                        Id,UserName,Password
    </sql>
    <sql id="crtTableName">
        User
    </sql>
    <sql id="joinAllColumns">
       a.Id
       ,a.Username
       ,a.Password
       ,c.Id AS Role_Id
       ,c.Name AS Role_Name
       ,e.Id AS Permission_Id
       ,e.Name AS Permission_Name

    </sql>

    <sql id="joinTableName">
        User as a INNER JOIN UserRoleRelation AS b
        ON a.Id = b.Id
        INNER JOIN Role AS c
        ON b.Role_Id = c.Id
        INNER JOIN RolePermissionRelation AS d
        ON c.Id = d.Role_Id
        INNER JOIN Permission AS e
        ON e.Id = d.Permission_Id
    </sql>



    <!--<select id="getAll" resultMap="userResultMap">-->
        <!--<![CDATA[-->

        <!--select <include refid="joinAllColumns"/> from <include refid="joinTableName"/>-->
        <!--]]>-->
    <!--</select>-->
    <!--         select <include refid="joinAllColumns"/> from <include refid="joinTableName"/> where username=#{username}-->

    <select id="getByUsername" resultMap="userResultMap">
        <![CDATA[


select
    a.Id,
    a.Username,
    a.Password,
    c.Id AS Role_Id,
    c.Name AS Role_Name,
    f.Id AS Permission_Id,
    f.Name AS Permission_Name
from
    User as a
        INNER JOIN
    UserRoleRelation AS b ON a.Id = b.Id
        INNER JOIN
    Role AS c ON b.Role_Id = c.Id
        LEFT join
    (SELECT
        e.Id, d.Role_Id, e.Name
    FROM
        RolePermissionRelation AS d
    INNER JOIN Permission AS e ON e.Id = d.Permission_Id) AS f ON c.Id = f.Role_Id
where
    a.username = #{username};

        ]]>
    </select>

    <!--<select id="getById" resultMap="userResultMap">-->
        <!--<![CDATA[-->
        <!--select <include refid="joinAllColumns"/> from <include refid="joinTableName"/> where id=#{id}-->
        <!--]]>-->
    <!--</select>-->


    <!--&lt;!&ndash; 自动生成id策略 &ndash;&gt;-->
    <!--<insert id="insertUser" useGeneratedKeys="true" keyProperty="id" keyColumn="Id">-->
<!--<![CDATA[-->
        <!--insert into <include refid="crtTableName"/> (Username,Password) values(#{username},#{password})-->
        <!--]]>-->
    <!--</insert>-->


    <!--<update id="updateUser">-->
<!--<![CDATA[-->
        <!--update <include refid="crtTableName"/> set Username=#{username},Password=#{password} where Id=#{id}-->
        <!--]]>-->

    <!--</update>-->

    <!--<delete id="destroyUser">-->
<!--<![CDATA[-->
        <!--delete from <include refid="crtTableName"/> where Id=#{id}-->
        <!--]]>-->
    <!--</delete>-->
</mapper>
